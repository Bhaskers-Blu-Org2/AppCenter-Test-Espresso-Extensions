buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    jcenter()
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

task sourcesJar(type: Jar) {
    // There is no allSources in the androidPlugin :-(
    from 'src'
    classifier = 'sources'
}

// pom file name
ext {
    pomFilePath = "${project.projectDir}/build/publications/androidLib/pom-default.xml"
    pomFile = file(pomFilePath)
}
// add configuration for pom signing
configurations {
    pom
}

def aar = file("build/outputs/aar/test-cloud-espresso-extensions-release.aar")

artifacts {
    archives sourcesJar
    archives aar
    pom pomFile
}

// sign all artifacts
task signArtifacts (type : Sign, dependsOn: sourcesJar) {
    sign configurations.archives
}
signArtifacts.dependsOn {
    tasks.findAll { task -> task.name.startsWith('generatePom')}
}

task preparePublication (dependsOn : signArtifacts)
publish.dependsOn { preparePublication }
publishToMavenLocal.dependsOn {preparePublication}

def getSignatureFiles = {
    def allFiles = project.tasks.signArtifacts.signatureFiles.collect { it }
    def signedSources = allFiles.find { it.name.contains('-sources') }
    def signedPom = allFiles.find { it.name.startsWith('pom-')}
    def signedAar = (allFiles - [signedSources] - [signedPom]).first()
    return [
            [archive: signedSources, classifier: 'sources', extension: 'jar.asc'],
            [archive: signedAar,     classifier: null,      extension: 'aar.asc'],
            [archive: signedPom,     classifier: null,      extension: 'pom.asc']
    ]
}

publishing {
    publications {
        androidLib(MavenPublication) {
            artifact aar
            groupId "com.xamarin.testcloud"
            artifactId "espresso-support"

            artifact(sourcesJar)

            getSignatureFiles().each { signature ->
                artifact(signature.archive) {
                    classifier = signature.classifier
                    extension = signature.extension
                }
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }

                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'Xamarin Test cloud espresso extensions'
                    description 'Extensions for producing nice looking test reports for espresso tests in Xamarin Test Cloud'
                    url 'http://testcloud.xamarin.com'
                    scm {
                        connection 'scm:git:git@github.com:xamarinhq/test-cloud-appium-espresso-extensions.git'
                        developerConnection 'scm:git:git@github.com:xamarinhq/test-cloud-appium-espresso-extensions.git'
                        url 'git@github.com:xamarinhq/test-cloud-appium-espresso-extensions.git'
                    }
                    licenses {
                        license {
                            name 'MIT License'
                            url 'http://www.opensource.org/licenses/mit-license.php'
                        }
                    }
                    developers {
                        developer {
                            name 'Chris Fuentes'
                            email 'chris.fuentes@xamarin.com'
                            organization 'Xamarin'
                            organizationUrl 'http://www.xamarin.com'
                        }
                        developer {
                            name 'Simon SÃ¸ndergaard'
                            email 'simon@xamarin.com'
                            organization 'Xamarin'
                            organizationUrl 'http://www.xamarin.com'
                        }
                    }
                }
                asNode().getByName('packaging').first().setValue('aar') // force packaging to aar
            }
        }
    }
    repositories {
        maven {
            if(version.endsWith('-SNAPSHOT')) {
                url 'https://oss.sonatype.org/content/repositories/snapshots/'
            } else {
                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            }
            credentials {
                username = ossrhUser
                password = ossrhPassword
            }
        }
    }
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.xamarin.testcloud:event:1.0-SNAPSHOT', {
        exclude group: 'junit', module: 'junit'
    }
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    provided 'com.android.support.test:runner:0.5'
}